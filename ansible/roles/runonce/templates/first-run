#!/usr/bin/env python

import os
import random
import string
import subprocess
import time

try:
    random = random.SystemRandom()
except NotImplementedError:
    pass


FULL_LOG_FILE = '/root/first-run.log'


def get_random_string(length):
    chars = string.ascii_letters + string.digits

    return ''.join(random.choice(chars) for _ in range(length))


def replace_mysql_password(password):
    filename = '/root/deskpro-install/ansible/group_vars/all'

    with open(filename) as vars_file:
        lines = vars_file.readlines()

    with open(filename, 'w') as vars_file:
        for line in lines:
            vars_file.write(line.replace('mysqlpasswordchangeme', password))


def log_call(*args):
    command = ['/usr/local/bin/deskpro-log-helper']
    command.extend(args)
    subprocess.call(command)


def run_ansible():
    with open(FULL_LOG_FILE, 'w') as outlog:
        subprocess.check_call(
            ['ansible-playbook', '-i', '127.0.0.1,', 'first-run.yml'],
            stdout=outlog, stderr=outlog,
            cwd='/root/deskpro-install/ansible',
        )


def main():
    try:
        new_password = get_random_string(32)
        replace_mysql_password(new_password)

        log_call('start')

        start_time = time.time()

        run_ansible()

        log_call('success', '--duration', str(time.time() - start_time))
    except:
        # Set up a marker for the failed install
        with open('{{install_failed_filename}}', 'a'):
            pass

        log_call(
            'error',
            '--duration', str(time.time() - start_time),
            '--summary', 'VM install failed',
        )
    finally:
        # Remove the file first to avoid network errors in the next call
        os.unlink('{{install_in_progress_filename}}')

        # Remove the "maintenance" html page
        os.unlink('{{deskpro_site_root}}/www/installing.html')

        log_call('log', '--file', FULL_LOG_FILE)

if __name__ == '__main__':
    main()
