---
- name: Create the deskpro group
  group:
    name: "{{deskpro_group}}"
    system: yes

- name: Create the deskpro user
  user:
    createhome: no
    group: "{{deskpro_group}}"
    name: "{{deskpro_user}}"
    system: yes

- name: Ensure base directory exists
  file:
    group: "{{deskpro_php_fpm_group}}"
    mode: 02770
    owner: "{{deskpro_user}}"
    path: "{{deskpro_install_root}}"
    recurse: yes
    state: directory

- name: Install unzip to ensure we can extract Deskpro
  package:
    name: unzip

# app/run/build-num.txt is usually one of the last files extracted from the
# Deskpro zip. Using it as a marker helps us ensure that the zip was fully
# extracted. Not 100% foolproof but this file shouldn't be removed any time
# soon
- name: Check for build-num.txt file
  stat:
    path: "{{deskpro_install_root}}/app/run/build-num.txt"
  register: build_num_file

- name: Install Deskpro
  block:
    - block:
        - name: Download Deskpro
          get_url:
            url: "{{deskpro_zip_url}}"
            dest: /usr/local/src/deskpro.zip
            force: no
      rescue:
        - file:
            path: /usr/local/src/deskpro.zip
            state: absent
        - fail:
            msg: Unable to download Deskpro
    - include: extract-and-install.yml
      when: not deskpro_download_only
  when: not (build_num_file.stat.exists and build_num_file.stat.isreg)

- name: Set Deskpro folder permissions
  file:
    group: "{{deskpro_php_fpm_group}}"
    mode: 0770
    owner: "{{deskpro_user}}"
    path: "{{deskpro_install_root}}"
    recurse: yes
    state: directory
  when: not deskpro_download_only

- name: Set SELinux type for httpd_t writable directories
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
    setype: httpd_sys_rw_content_t
  when: ansible_selinux.status == 'enabled' and not deskpro_download_only
  with_items:
    - "{{deskpro_install_root}}/attachments/"
    - "{{deskpro_install_root}}/var/"

- name: Set SELinux type for httpd_t read-only directories
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
    setype: httpd_sys_content_t
  when: ansible_selinux.status == 'enabled' and not deskpro_download_only
  with_items:
    - "{{deskpro_install_root}}/app"
    - "{{deskpro_install_root}}/config"
    - "{{deskpro_install_root}}/www"

- name: Enable SELinux booleans
  seboolean:
    name: "{{item}}"
    state: yes
    persistent: yes
  when: ansible_selinux.status == 'enabled'
  with_items:
    - httpd_can_connect_ldap
    - httpd_can_network_connect
    - httpd_can_network_connect_db
    - httpd_can_sendmail
    - httpd_execmem
    - httpd_setrlimit

- name: Add cron jobs HOME variable
  cron:
    name: HOME
    env: yes
    value: /
    user: "{{deskpro_user}}"
  when: not deskpro_download_only

- name: Install cron job
  cron:
    name: Deskpro cron job
    user: "{{deskpro_user}}"
    job: "{{deskpro_install_root}}/bin/cron"
    cron_file: deskpro-cron
  when: not deskpro_download_only

- name: Enable Apache Tika for Deskpro
  deskpro_setting:
    name: "{{item.name}}"
    value: "{{item.value}}"
  with_items:
    - name: elastica.tika.enabled
      value: 1
    - name: elastica.tika.ip_address
      value: "{{deskpro_tika_host}}"
    - name: elastica.tika.port
      value: "{{deskpro_tika_port}}"
  when: not deskpro_download_only

- name: Turn on URL rewrite
  deskpro_setting:
    name: core.rewrite_urls
    value: 1
  when: not deskpro_download_only

- name: Ensure we got the right elasticsearch url
  deskpro_setting:
    name: elastica.clients.default.url
    value: "{{deskpro_elasticsearch_address}}"
  when: not deskpro_download_only
